//===============================================================================
// Microsoft patterns & practices Enterprise Library
// Security Application Block
//===============================================================================
// Copyright © Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DesignResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DesignResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.Configuration.D" +
                            "esignResources", typeof(DesignResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of minutes since the security information was first added to the cache that it will expire. The default is 60 minutes..
        /// </summary>
        internal static string CachingStoreProviderDataAbsoluteExpirationDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataAbsoluteExpirationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absolute Expiration (minutes).
        /// </summary>
        internal static string CachingStoreProviderDataAbsoluteExpirationDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataAbsoluteExpirationDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Cache Manager configured in the Caching Application Block Cache to use as the security information store..
        /// </summary>
        internal static string CachingStoreProviderDataCacheManagerDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataCacheManagerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Manager.
        /// </summary>
        internal static string CachingStoreProviderDataCacheManagerDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataCacheManagerDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A provider that implements a cache for storing security information. It uses the caching mechanism implemented by the Caching Application Block..
        /// </summary>
        internal static string CachingStoreProviderDataDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Cache.
        /// </summary>
        internal static string CachingStoreProviderDataDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Caching Store Provider..
        /// </summary>
        internal static string CachingStoreProviderDataNameDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string CachingStoreProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of minutes since the security information was last accessed that it will expire. The default is 10 minutes..
        /// </summary>
        internal static string CachingStoreProviderDataSlidingExpirationDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataSlidingExpirationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sliding Expiration Time (minutes).
        /// </summary>
        internal static string CachingStoreProviderDataSlidingExpirationDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataSlidingExpirationDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Caching Store Provider ..
        /// </summary>
        internal static string CachingStoreProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string CachingStoreProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("CachingStoreProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
    }
}
