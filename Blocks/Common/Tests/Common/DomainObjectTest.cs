//===============================================================================
// Microsoft patterns & practices Enterprise Library
// Core
//===============================================================================
// Copyright © Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================

// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting.Web;
namespace Microsoft.Practices.EnterpriseLibrary.Common.Tests
{
	/// <summary>
	///This is a test class for DomainModel.DomainObject and is intended
	///to contain all DomainModel.DomainObject Unit Tests
	///</summary>
	[TestClass()]
	public class DomainObjectTest
	{


		private TestContext testContextInstance;

		/// <summary>
		///Gets or sets the test context which provides
		///information about and functionality for the current test run.
		///</summary>
		public TestContext TestContext
		{
			get
			{
				return testContextInstance;
			}
			set
			{
				testContextInstance = value;
			}
		}
		#region Additional test attributes
		// 
		//You can use the following additional attributes as you write your tests:
		//
		//Use ClassInitialize to run code before running the first test in the class
		//
		//[ClassInitialize()]
		//public static void MyClassInitialize(TestContext testContext)
		//{
		//}
		//
		//Use ClassCleanup to run code after all tests in a class have run
		//
		//[ClassCleanup()]
		//public static void MyClassCleanup()
		//{
		//}
		//
		//Use TestInitialize to run code before running each test
		//
		//[TestInitialize()]
		//public void MyTestInitialize()
		//{
		//}
		//
		//Use TestCleanup to run code after each test has run
		//
		//[TestCleanup()]
		//public void MyTestCleanup()
		//{
		//}
		//
		#endregion


		/// <summary>
		///A test for DomainObject ()
		///</summary>
		[TestMethod()]
		[HostType("ASP.NET")]
		[AspNetDevelopmentServerHost("%PathToWebRoot%\\Web", "/Web")]
		[UrlToTest("http://localhost/Web")]
		public void ConstructorTest()
		{
			object target = Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor.CreatePrivate();

			// TODO: Implement code to verify target
			Assert.Inconclusive("TODO: Implement code to verify target");

		}

		/// <summary>
		///A test for Name
		///</summary>
		[TestMethod()]
		[HostType("ASP.NET")]
		[AspNetDevelopmentServerHost("%PathToWebRoot%\\Web", "/Web")]
		[UrlToTest("http://localhost/Web")]
		public void NameTest()
		{
			object target = Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor.CreatePrivate();

			string val = null; // TODO: Assign to an appropriate value for the property

			Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor accessor = new Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor(target);


			Assert.AreEqual(val, accessor.Name, "DomainModel.DomainObject.Name was not set correctly.");
			Assert.Inconclusive("Verify the correctness of this test method.");

		}


		/// <summary>
		///A test for DomainObject ()
		///</summary>
		[TestMethod()]
		[HostType("ASP.NET")]
		[AspNetDevelopmentServerHost("%PathToWebRoot%\\Web", "/Web")]
		[UrlToTest("http://localhost/Web")]
		public void ConstructorTest1()
		{
			object target = Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor.CreatePrivate();

			// TODO: Implement code to verify target
			Assert.Inconclusive("TODO: Implement code to verify target");

		}

		/// <summary>
		///A test for Name
		///</summary>
		[TestMethod()]
		[HostType("ASP.NET")]
		[AspNetDevelopmentServerHost("%PathToWebRoot%\\Web", "/Web")]
		[UrlToTest("http://localhost/Web")]
		public void NameTest1()
		{
			object target = Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor.CreatePrivate();

			string val = null; // TODO: Assign to an appropriate value for the property

			Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor accessor = new Microsoft.Practices.EnterpriseLibrary.Common.Tests.DomainModel_DomainObjectAccessor(target);


			Assert.AreEqual(val, accessor.Name, "DomainModel.DomainObject.Name was not set correctly.");
			Assert.Inconclusive("Verify the correctness of this test method.");

		}
	}


}
